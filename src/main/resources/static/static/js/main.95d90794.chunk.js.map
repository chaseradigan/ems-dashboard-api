{"version":3,"sources":["Layout/QueueList.js","Layout/ServerLinks.js","Layout/ServerList.js","App.js","serviceWorker.js","index.js"],"names":["QueueList","props","_this","Object","classCallCheck","this","pathnameID","possibleConstructorReturn","getPrototypeOf","call","match","params","id","pathnameQueue","queue","state","filePath","concat","currentList","oldList","currentQList","oldQList","compareList","showCompare","value","oldvalue","consumers","ready","errorsCur","errorsOld","handleChange","bind","assertThisInitialized","handleOldChange","handleSubmit","fetchList","event","setState","path","axios","get","headers","res","data","errors","preventDefault","changes","_this2","then","response","queues","catch","error","console","log","pathname2","length","compare","_this3","react_default","a","createElement","className","dist_default","options","map","name","mode","height","placeholder","search","onChange","onClick","change","substring","oldentry","entry","Component","ServerLinks","react_router_dom","to","handleClick1","handleClick2","ListServers","_ref","servers","server","key","ServerList","ServerList_ListServers","App","react_router","exact","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.95d90794.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport SelectSearch from \"react-select-search\";\r\nimport \"../style.css\";\r\n// function compare(array1, array2) {\r\n//   if (!array1 || !array2) return;\r\n//   const temp = [];\r\n//   array1 = array1\r\n//     .toString()\r\n//     .split(\",\")\r\n//     .map(String);\r\n//   array2 = array2\r\n//     .toString()\r\n//     .split(\",\")\r\n//     .map(String);\r\n\r\n//   for (var i in array1) {\r\n//     if (!array2.includes(array1[i])) temp.push(array1[i]);\r\n//   }\r\n//   for (i in array2) {\r\n//     if (!array1.includes(array2[i])) temp.push(array2[i]);\r\n//   }\r\n//   return temp.sort((a, b) => a - b);\r\n// }\r\n\r\nexport default class QueueList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let pathnameID = this.props.match.params.id;\r\n    let pathnameQueue = this.props.match.params.queue;\r\n    this.state = {\r\n      filePath: `${pathnameID}/${pathnameQueue}/logs/`,\r\n      currentList: [],\r\n      oldList: [],\r\n      currentQList: [],\r\n      oldQList: [],\r\n      compareList: [],\r\n      showCompare: true,\r\n      value: \"\",\r\n      oldvalue: \"\",\r\n      consumers: true,\r\n      ready: false,\r\n      errorsCur: null,\r\n      errorsOld: null\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleOldChange = this.handleOldChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.fetchList = this.fetchList.bind(this);\r\n  }\r\n\r\n  async handleChange(event) {\r\n    let queue = event.value;\r\n    this.setState({ value: queue });\r\n    let path = `${this.state.filePath}final.txt`;\r\n    const res = await axios.get(\"/getqueue\", {\r\n      headers: {\r\n        path: path,\r\n        queue: queue\r\n      }\r\n    });\r\n    this.setState({\r\n      currentList: res.data.consumers,\r\n      errorsCur: res.data.errors\r\n    });\r\n  }\r\n  async handleOldChange(event) {\r\n    let queue = event.value;\r\n    this.setState({ oldvalue: queue });\r\n    let path = `${this.state.filePath}past.txt`;\r\n    const res = await axios.get(\"/getqueue\", {\r\n      headers: {\r\n        path: path,\r\n        queue: queue\r\n      }\r\n    });\r\n    this.setState({ oldList: res.data.consumers, errorsOld: res.data.errors });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    this.setState({\r\n      consumers: true\r\n    });\r\n\r\n    event.preventDefault();\r\n  }\r\n  async fetchList(path) {\r\n    const res = await axios.get(\"/queuelist\", {\r\n      headers: {\r\n        path: path\r\n      }\r\n    });\r\n    return res;\r\n  }\r\n  async compare(queue) {\r\n    const res = await axios.get(\"/compare\", {\r\n      headers: {\r\n        path: this.state.filePath,\r\n        queue: queue\r\n      }\r\n    });\r\n    this.setState({\r\n      compareList: res.data.changes,\r\n      showCompare: true\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    let path = `${this.state.filePath}final.txt`;\r\n    this.fetchList(path)\r\n      .then(response => {\r\n        this.setState({\r\n          currentQList: response.data.queues,\r\n          errorsCur: response.data.errors\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ errorsCur: error.response.data });\r\n        console.log(error.response);\r\n      });\r\n\r\n    let pathname2 = `${this.state.filePath}past.txt`;\r\n    this.fetchList(pathname2)\r\n      .then(response => {\r\n        this.setState({\r\n          oldQList: response.data.queues,\r\n          errorsOld: response.data.errors,\r\n          ready: true\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ errorsOld: error.response.data });\r\n        console.log(error.response);\r\n      });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (\r\n      this.state.value === this.state.oldvalue &&\r\n      this.state.compareList.length === 0 &&\r\n      !!this.state.value\r\n    ) {\r\n      this.compare(this.state.value);\r\n    } else if (\r\n      this.state.value !== this.state.oldvalue &&\r\n      this.state.compareList.length !== 0\r\n    ) {\r\n      this.setState({\r\n        compareList: []\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.errorsCur || this.state.errorsOld) {\r\n      return (\r\n        <div className=\"alert alert-danger\">\r\n          <div className=\"row\">{this.state.errorsCur}</div>\r\n          <div className=\"row\">{this.state.errorsOld}</div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (!this.state.ready) {\r\n      return (\r\n        <div className=\"alert alert-primary\">\r\n          <div className=\"row\">Loading data from files...</div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\" container  text-dark\">\r\n        <div className=\"row align-top\">\r\n          <div className=\"col-6 mb-5 mt-5\">\r\n            <SelectSearch\r\n              options={this.state.oldQList.map(queue => {\r\n                return { name: queue, value: queue };\r\n              })}\r\n              value={this.state.oldvalue}\r\n              mode=\"input\"\r\n              name=\"queues\"\r\n              height={200}\r\n              placeholder=\"Search Old Queues\"\r\n              search=\"true\"\r\n              onChange={this.handleOldChange}\r\n            />\r\n          </div>\r\n          <div className=\"col-6 mb-5 mt-5\">\r\n            <SelectSearch\r\n              options={this.state.currentQList.map(queue => {\r\n                return { name: queue, value: queue };\r\n              })}\r\n              value={this.state.value}\r\n              mode=\"input\"\r\n              name=\"queues\"\r\n              height={200}\r\n              placeholder=\"Search Current Queues\"\r\n              search=\"true\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {this.state.compareList.length > 0 && this.state.consumers && (\r\n          <div>\r\n            <ul className=\"list-group\">\r\n              <button\r\n                className=\"list-group-item active dropdown-toggle\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    showCompare: !this.state.showCompare\r\n                  });\r\n                }}\r\n              >\r\n                <b>{this.state.showCompare ? \"- HIDE\" : \"+ SHOW\"}</b> Changes in{\" \"}\r\n                {this.state.value}: {this.state.compareList.length}\r\n              </button>\r\n              {this.state.showCompare &&\r\n                this.state.compareList.map(change => {\r\n                  let sign = change.substring(0, 1);\r\n                  if (sign === \"+\") {\r\n                    return (\r\n                      <li className=\"list-group-item small list-group-item-success display-4 font-weight-light \">\r\n                        {change}\r\n                      </li>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <li className=\"list-group-item list-group-item-danger small display-4 font-weight-light \">\r\n                        {change}\r\n                      </li>\r\n                    );\r\n                  }\r\n                })}\r\n            </ul>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"row  \">\r\n          <div className=\"col-6 mb-5\">\r\n            {this.state.consumers && this.state.oldList.length > 0 && (\r\n              <div>\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item active\">\r\n                    Old Consumers: {this.state.oldList.length}\r\n                  </li>\r\n                  {this.state.oldList.map(oldentry => (\r\n                    <li className=\"list-group-item small display-4 font-weight-light \">\r\n                      {oldentry}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"col-6 mb-5\">\r\n            {this.state.consumers && this.state.currentList.length > 0 && (\r\n              <div>\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item active\">\r\n                    Current Consumers: {this.state.currentList.length}\r\n                  </li>\r\n                  {this.state.currentList.map(entry => (\r\n                    <li className=\"list-group-item small display-4 font-weight-light \">\r\n                      {entry}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default class ServerLinks extends Component {\r\n  handleClick2() {}\r\n  render() {\r\n    let ems2 = \"EMS_U2\";\r\n    let ems1 = \"EMS_U1\";\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/${ems1}`}>\r\n          <button className=\"btn btn-light\" onClick={this.handleClick1}>\r\n            EMS_U1\r\n          </button>\r\n        </Link>\r\n        <Link to={`/${ems2}`}>\r\n          <button className=\"btn btn-light\" onClick={this.handleClick2}>\r\n            EMS_U2\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ListServers = ({ servers, id }) => (\r\n  <div>\r\n    {servers.map(server => (\r\n      <div className=\"row\" key={server}>\r\n        <Link to={`/${id}/${server}`}>\r\n          <button className=\"btn btn-light\">{server}</button>\r\n        </Link>\r\n      </div>\r\n    ))}\r\n  </div>\r\n);\r\nexport default class ServerList extends Component {\r\n  render() {\r\n    let U1servers = [\r\n      \"APP_U1_p1d0_7022\",\r\n      \"APP_U1_p1d1_7122\",\r\n      \"APP_U1_p2d0_7022\",\r\n      \"APP_U1_p2d1_7122\",\r\n      \"APP_U1_p5d0_7022\",\r\n      \"APP_U1_p5d1_7122\",\r\n      \"APP_U1_p6d0_7022\",\r\n      \"APP_U1_p6d1_7122\"\r\n    ];\r\n    let U2servers = [\r\n      \"APP_U2_p1d0_7022\",\r\n      \"APP_U2_p1d1_7122\",\r\n      \"APP_U2_p2d0_7022\",\r\n      \"APP_U2_p2d1_7122\",\r\n      \"APP_U2_p5d0_7022\",\r\n      \"APP_U2_p5d1_7122\",\r\n      \"APP_U2_p6d0_7022\",\r\n      \"APP_U2_p6d1_7122\"\r\n    ];\r\n\r\n    const {\r\n      match: { params }\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"container text-dark \">\r\n        {params.id === \"EMS_U1\" ? (\r\n          <ListServers servers={U1servers} id={params.id} />\r\n        ) : (\r\n          <ListServers servers={U2servers} id={params.id} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\n\r\nimport QueueList from \"./Layout/QueueList\";\r\nimport ServerLinks from \"./Layout/ServerLinks\";\r\nimport ServerList from \"./Layout/ServerList\";\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <div className=\"App\">\r\n          <header className=\"App-header bg-light\">\r\n            <div className=\"container\" />\r\n\r\n            <Route exact path=\"/\" component={ServerLinks} />\r\n            <Route exact path=\"/:id\" component={ServerList} />\r\n            <Route exact path=\"/:id/:queue\" component={QueueList} />\r\n          </header>\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}